/*
Deployment script for MaximaDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "MaximaDB"
:setvar DefaultFilePrefix "MaximaDB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[City]...';


GO
CREATE TABLE [dbo].[City] (
    [Id]           INT            IDENTITY (1, 1) NOT NULL,
    [Name]         NVARCHAR (255) NOT NULL,
    [sysCreatedAt] DATETIME       NULL,
    [sysChangedAt] DATETIME       NULL,
    [sysCreatedBy] INT            NULL,
    [sysChangedBy] INT            NULL,
    CONSTRAINT [PK_City_Id] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[City].[IX_City_Name]...';


GO
CREATE NONCLUSTERED INDEX [IX_City_Name]
    ON [dbo].[City]([Name] ASC);


GO
PRINT N'Creating [dbo].[Company]...';


GO
CREATE TABLE [dbo].[Company] (
    [Id]           INT            IDENTITY (1, 1) NOT NULL,
    [Name]         NVARCHAR (255) NOT NULL,
    [sysCreatedAt] DATETIME       NULL,
    [sysChangedAt] DATETIME       NULL,
    [sysCreatedBy] INT            NULL,
    [sysChangedBy] INT            NULL,
    CONSTRAINT [PK_Company_Id] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Company].[IX_Company_Name]...';


GO
CREATE NONCLUSTERED INDEX [IX_Company_Name]
    ON [dbo].[Company]([Name] ASC);


GO
PRINT N'Creating [dbo].[DBMS]...';


GO
CREATE TABLE [dbo].[DBMS] (
    [Id]           INT           IDENTITY (1, 1) NOT NULL,
    [Name]         NVARCHAR (50) NOT NULL,
    [sysCreatedAt] DATETIME      NULL,
    [sysChangedAt] DATETIME      NULL,
    [sysCreatedBy] INT           NULL,
    [sysChangedBy] INT           NULL,
    CONSTRAINT [PK_DBMS_Id] PRIMARY KEY CLUSTERED ([Id] ASC),
    CONSTRAINT [UC_DBMS_Name] UNIQUE NONCLUSTERED ([Name] ASC)
);


GO
PRINT N'Creating [dbo].[Developer]...';


GO
CREATE TABLE [dbo].[Developer] (
    [Id]                INT            IDENTITY (1, 1) NOT NULL,
    [Name]              NVARCHAR (255) NOT NULL,
    [Level]             TINYINT        NOT NULL,
    [Company]           INT            NULL,
    [ActualCity]        INT            NOT NULL,
    [ExperienceInYears] TINYINT        NOT NULL,
    [sysCreatedAt]      DATETIME       NULL,
    [sysChangedAt]      DATETIME       NULL,
    [sysCreatedBy]      INT            NULL,
    [sysChangedBy]      INT            NULL,
    CONSTRAINT [PK_Developer_Id] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[DeveloperDBMS]...';


GO
CREATE TABLE [dbo].[DeveloperDBMS] (
    [Id]           INT           IDENTITY (1, 1) NOT NULL,
    [Developer]    INT           NOT NULL,
    [DBMS]         INT           NOT NULL,
    [Version]      NVARCHAR (20) NULL,
    [sysCreatedAt] DATETIME      NULL,
    [sysChangedAt] DATETIME      NULL,
    [sysCreatedBy] INT           NULL,
    [sysChangedBy] INT           NULL,
    CONSTRAINT [PK_DeveloperDBMS_Id] PRIMARY KEY CLUSTERED ([Id] ASC),
    CONSTRAINT [UC_DeveloperDBMS_Version] UNIQUE NONCLUSTERED ([Developer] ASC, [DBMS] ASC, [Version] ASC)
);


GO
PRINT N'Creating [dbo].[DeveloperDBMSTag]...';


GO
CREATE TABLE [dbo].[DeveloperDBMSTag] (
    [Id]            INT            IDENTITY (1, 1) NOT NULL,
    [Tag]           NVARCHAR (255) NOT NULL,
    [DeveloperDBMS] INT            NOT NULL,
    [sysCreatedAt]  DATETIME       NULL,
    [sysChangedAt]  DATETIME       NULL,
    [sysCreatedBy]  INT            NULL,
    [sysChangedBy]  INT            NULL,
    CONSTRAINT [PK_DeveloperDBMSTag_Id] PRIMARY KEY CLUSTERED ([Id] ASC),
    CONSTRAINT [UC_DeveloperDBMSTag] UNIQUE NONCLUSTERED ([DeveloperDBMS] ASC, [Tag] ASC)
);


GO
PRINT N'Creating [dbo].[DeveloperDBMSTag].[IX_DeveloperDBMSTag_Tag]...';


GO
CREATE NONCLUSTERED INDEX [IX_DeveloperDBMSTag_Tag]
    ON [dbo].[DeveloperDBMSTag]([Tag] ASC);


GO
PRINT N'Creating [dbo].[DeveloperLanguage]...';


GO
CREATE TABLE [dbo].[DeveloperLanguage] (
    [Id]           INT           IDENTITY (1, 1) NOT NULL,
    [Developer]    INT           NOT NULL,
    [Language]     NVARCHAR (50) NOT NULL,
    [sysCreatedAt] DATETIME      NULL,
    [sysChangedAt] DATETIME      NULL,
    [sysCreatedBy] INT           NULL,
    [sysChangedBy] INT           NULL,
    CONSTRAINT [PK_DeveloperLanguage_Id] PRIMARY KEY CLUSTERED ([Id] ASC),
    CONSTRAINT [UC_DeveloperLanguage] UNIQUE NONCLUSTERED ([Developer] ASC, [Language] ASC)
);


GO
PRINT N'Creating [dbo].[DeveloperLanguage].[IX_DeveloperLanguage_Language]...';


GO
CREATE NONCLUSTERED INDEX [IX_DeveloperLanguage_Language]
    ON [dbo].[DeveloperLanguage]([Language] ASC);


GO
PRINT N'Creating [dbo].[DeveloperLanguageTag]...';


GO
CREATE TABLE [dbo].[DeveloperLanguageTag] (
    [Id]                INT           IDENTITY (1, 1) NOT NULL,
    [DeveloperLanguage] INT           NOT NULL,
    [IsWriter]          BIT           NULL,
    [Tag]               NVARCHAR (50) NOT NULL,
    [sysCreatedAt]      DATETIME      NULL,
    [sysChangedAt]      DATETIME      NULL,
    [sysCreatedBy]      INT           NULL,
    [sysChangedBy]      INT           NULL,
    CONSTRAINT [PK_DeveloperLanguageTag_Id] PRIMARY KEY CLUSTERED ([Id] ASC),
    CONSTRAINT [UC_DeveloperLanguageTag] UNIQUE NONCLUSTERED ([DeveloperLanguage] ASC, [Tag] ASC)
);


GO
PRINT N'Creating [dbo].[DeveloperLanguageTag].[IX_DeveloperLanguageTag_Tag]...';


GO
CREATE NONCLUSTERED INDEX [IX_DeveloperLanguageTag_Tag]
    ON [dbo].[DeveloperLanguageTag]([Tag] ASC);


GO
PRINT N'Creating [dbo].[DF_City_sysCreatedAt]...';


GO
ALTER TABLE [dbo].[City]
    ADD CONSTRAINT [DF_City_sysCreatedAt] DEFAULT (getutcdate()) FOR [sysCreatedAt];


GO
PRINT N'Creating [dbo].[DF_City_sysChangedAt]...';


GO
ALTER TABLE [dbo].[City]
    ADD CONSTRAINT [DF_City_sysChangedAt] DEFAULT (getutcdate()) FOR [sysChangedAt];


GO
PRINT N'Creating [dbo].[DF_City_sysCreatedBy]...';


GO
ALTER TABLE [dbo].[City]
    ADD CONSTRAINT [DF_City_sysCreatedBy] DEFAULT ((-1)) FOR [sysCreatedBy];


GO
PRINT N'Creating [dbo].[DF_City_sysChangedBy]...';


GO
ALTER TABLE [dbo].[City]
    ADD CONSTRAINT [DF_City_sysChangedBy] DEFAULT ((-1)) FOR [sysChangedBy];


GO
PRINT N'Creating [dbo].[DF_Company_sysCreatedAt]...';


GO
ALTER TABLE [dbo].[Company]
    ADD CONSTRAINT [DF_Company_sysCreatedAt] DEFAULT (getutcdate()) FOR [sysCreatedAt];


GO
PRINT N'Creating [dbo].[DF_Company_sysChangedAt]...';


GO
ALTER TABLE [dbo].[Company]
    ADD CONSTRAINT [DF_Company_sysChangedAt] DEFAULT (getutcdate()) FOR [sysChangedAt];


GO
PRINT N'Creating [dbo].[DF_Company_sysCreatedBy]...';


GO
ALTER TABLE [dbo].[Company]
    ADD CONSTRAINT [DF_Company_sysCreatedBy] DEFAULT ((-1)) FOR [sysCreatedBy];


GO
PRINT N'Creating [dbo].[DF_Company_sysChangedBy]...';


GO
ALTER TABLE [dbo].[Company]
    ADD CONSTRAINT [DF_Company_sysChangedBy] DEFAULT ((-1)) FOR [sysChangedBy];


GO
PRINT N'Creating [dbo].[DF_DBMS_sysCreatedAt]...';


GO
ALTER TABLE [dbo].[DBMS]
    ADD CONSTRAINT [DF_DBMS_sysCreatedAt] DEFAULT (getutcdate()) FOR [sysCreatedAt];


GO
PRINT N'Creating [dbo].[DF_DBMS_sysChangedAt]...';


GO
ALTER TABLE [dbo].[DBMS]
    ADD CONSTRAINT [DF_DBMS_sysChangedAt] DEFAULT (getutcdate()) FOR [sysChangedAt];


GO
PRINT N'Creating [dbo].[DF_DBMS_sysCreatedBy]...';


GO
ALTER TABLE [dbo].[DBMS]
    ADD CONSTRAINT [DF_DBMS_sysCreatedBy] DEFAULT ((-1)) FOR [sysCreatedBy];


GO
PRINT N'Creating [dbo].[DF_DBMS_sysChangedBy]...';


GO
ALTER TABLE [dbo].[DBMS]
    ADD CONSTRAINT [DF_DBMS_sysChangedBy] DEFAULT ((-1)) FOR [sysChangedBy];


GO
PRINT N'Creating [dbo].[DF_Developer_sysCreatedAt]...';


GO
ALTER TABLE [dbo].[Developer]
    ADD CONSTRAINT [DF_Developer_sysCreatedAt] DEFAULT (getutcdate()) FOR [sysCreatedAt];


GO
PRINT N'Creating [dbo].[DF_Developer_sysChangedAt]...';


GO
ALTER TABLE [dbo].[Developer]
    ADD CONSTRAINT [DF_Developer_sysChangedAt] DEFAULT (getutcdate()) FOR [sysChangedAt];


GO
PRINT N'Creating [dbo].[DF_Developer_sysCreatedBy]...';


GO
ALTER TABLE [dbo].[Developer]
    ADD CONSTRAINT [DF_Developer_sysCreatedBy] DEFAULT ((-1)) FOR [sysCreatedBy];


GO
PRINT N'Creating [dbo].[DF_Developer_sysChangedBy]...';


GO
ALTER TABLE [dbo].[Developer]
    ADD CONSTRAINT [DF_Developer_sysChangedBy] DEFAULT ((-1)) FOR [sysChangedBy];


GO
PRINT N'Creating [dbo].[DF_DeveloperDBMS_sysCreatedAt]...';


GO
ALTER TABLE [dbo].[DeveloperDBMS]
    ADD CONSTRAINT [DF_DeveloperDBMS_sysCreatedAt] DEFAULT (getutcdate()) FOR [sysCreatedAt];


GO
PRINT N'Creating [dbo].[DF_DeveloperDBMS_sysChangedAt]...';


GO
ALTER TABLE [dbo].[DeveloperDBMS]
    ADD CONSTRAINT [DF_DeveloperDBMS_sysChangedAt] DEFAULT (getutcdate()) FOR [sysChangedAt];


GO
PRINT N'Creating [dbo].[DF_DeveloperDBMS_sysCreatedBy]...';


GO
ALTER TABLE [dbo].[DeveloperDBMS]
    ADD CONSTRAINT [DF_DeveloperDBMS_sysCreatedBy] DEFAULT ((-1)) FOR [sysCreatedBy];


GO
PRINT N'Creating [dbo].[DF_DeveloperDBMS_sysChangedBy]...';


GO
ALTER TABLE [dbo].[DeveloperDBMS]
    ADD CONSTRAINT [DF_DeveloperDBMS_sysChangedBy] DEFAULT ((-1)) FOR [sysChangedBy];


GO
PRINT N'Creating [dbo].[DF_DeveloperDBMSTag_sysCreatedAt]...';


GO
ALTER TABLE [dbo].[DeveloperDBMSTag]
    ADD CONSTRAINT [DF_DeveloperDBMSTag_sysCreatedAt] DEFAULT (getutcdate()) FOR [sysCreatedAt];


GO
PRINT N'Creating [dbo].[DF_DeveloperDBMSTag_sysChangedAt]...';


GO
ALTER TABLE [dbo].[DeveloperDBMSTag]
    ADD CONSTRAINT [DF_DeveloperDBMSTag_sysChangedAt] DEFAULT (getutcdate()) FOR [sysChangedAt];


GO
PRINT N'Creating [dbo].[DF_DeveloperDBMSTag_sysCreatedBy]...';


GO
ALTER TABLE [dbo].[DeveloperDBMSTag]
    ADD CONSTRAINT [DF_DeveloperDBMSTag_sysCreatedBy] DEFAULT ((-1)) FOR [sysCreatedBy];


GO
PRINT N'Creating [dbo].[DF_DeveloperDBMSTag_sysChangedBy]...';


GO
ALTER TABLE [dbo].[DeveloperDBMSTag]
    ADD CONSTRAINT [DF_DeveloperDBMSTag_sysChangedBy] DEFAULT ((-1)) FOR [sysChangedBy];


GO
PRINT N'Creating [dbo].[DF_DeveloperLanguage_sysCreatedAt]...';


GO
ALTER TABLE [dbo].[DeveloperLanguage]
    ADD CONSTRAINT [DF_DeveloperLanguage_sysCreatedAt] DEFAULT (getutcdate()) FOR [sysCreatedAt];


GO
PRINT N'Creating [dbo].[DF_DeveloperLanguage_sysChangedAt]...';


GO
ALTER TABLE [dbo].[DeveloperLanguage]
    ADD CONSTRAINT [DF_DeveloperLanguage_sysChangedAt] DEFAULT (getutcdate()) FOR [sysChangedAt];


GO
PRINT N'Creating [dbo].[DF_DeveloperLanguage_sysCreatedBy]...';


GO
ALTER TABLE [dbo].[DeveloperLanguage]
    ADD CONSTRAINT [DF_DeveloperLanguage_sysCreatedBy] DEFAULT ((-1)) FOR [sysCreatedBy];


GO
PRINT N'Creating [dbo].[DF_DeveloperLanguage_sysChangedBy]...';


GO
ALTER TABLE [dbo].[DeveloperLanguage]
    ADD CONSTRAINT [DF_DeveloperLanguage_sysChangedBy] DEFAULT ((-1)) FOR [sysChangedBy];


GO
PRINT N'Creating [dbo].[DF_DeveloperLanguageTag_sysCreatedAt]...';


GO
ALTER TABLE [dbo].[DeveloperLanguageTag]
    ADD CONSTRAINT [DF_DeveloperLanguageTag_sysCreatedAt] DEFAULT (getutcdate()) FOR [sysCreatedAt];


GO
PRINT N'Creating [dbo].[DF_DeveloperLanguageTag_sysChangedAt]...';


GO
ALTER TABLE [dbo].[DeveloperLanguageTag]
    ADD CONSTRAINT [DF_DeveloperLanguageTag_sysChangedAt] DEFAULT (getutcdate()) FOR [sysChangedAt];


GO
PRINT N'Creating [dbo].[DF_DeveloperLanguageTag_sysCreatedBy]...';


GO
ALTER TABLE [dbo].[DeveloperLanguageTag]
    ADD CONSTRAINT [DF_DeveloperLanguageTag_sysCreatedBy] DEFAULT ((-1)) FOR [sysCreatedBy];


GO
PRINT N'Creating [dbo].[DF_DeveloperLanguageTag_sysChangedBy]...';


GO
ALTER TABLE [dbo].[DeveloperLanguageTag]
    ADD CONSTRAINT [DF_DeveloperLanguageTag_sysChangedBy] DEFAULT ((-1)) FOR [sysChangedBy];


GO
PRINT N'Creating [dbo].[FK_DeveloperDBMS_DBMS]...';


GO
ALTER TABLE [dbo].[DeveloperDBMS]
    ADD CONSTRAINT [FK_DeveloperDBMS_DBMS] FOREIGN KEY ([DBMS]) REFERENCES [dbo].[DBMS] ([Id]);


GO
PRINT N'Creating [dbo].[FK_DeveloperDBMS_Developer]...';


GO
ALTER TABLE [dbo].[DeveloperDBMS]
    ADD CONSTRAINT [FK_DeveloperDBMS_Developer] FOREIGN KEY ([Developer]) REFERENCES [dbo].[Developer] ([Id]);


GO
PRINT N'Creating [dbo].[FK_DeveloperDBMSTag_DeveloperDBMS]...';


GO
ALTER TABLE [dbo].[DeveloperDBMSTag]
    ADD CONSTRAINT [FK_DeveloperDBMSTag_DeveloperDBMS] FOREIGN KEY ([DeveloperDBMS]) REFERENCES [dbo].[DeveloperDBMS] ([Id]);


GO
PRINT N'Creating [dbo].[FK_DeveloperLanguage_Developer]...';


GO
ALTER TABLE [dbo].[DeveloperLanguage]
    ADD CONSTRAINT [FK_DeveloperLanguage_Developer] FOREIGN KEY ([Developer]) REFERENCES [dbo].[Developer] ([Id]);


GO
PRINT N'Creating [dbo].[FK_DeveloperLanguageTag_DeveloperLanguage]...';


GO
ALTER TABLE [dbo].[DeveloperLanguageTag]
    ADD CONSTRAINT [FK_DeveloperLanguageTag_DeveloperLanguage] FOREIGN KEY ([DeveloperLanguage]) REFERENCES [dbo].[DeveloperLanguage] ([Id]);


GO
PRINT N'Creating [dbo].[vw_Candidates]...';


GO
CREATE VIEW [dbo].[vw_Candidates]
WITH SCHEMABINDING
AS
(select d.Name as DeveloperName, d.[Level],
            (
                case 
                    when exists (select dl.Developer, dl.[Language] from dbo.DeveloperLanguage as dl where dl.Developer = d.Id and dl.[Language] in ('C#', 'Java', 'Delphi')) then 1 
                    else 0 
                end +
                iif(ddbt.Id is null, 0, 1) +
                iif(dlt.Id is null, 0, 1)
            ) as Advantage 
        from dbo.Developer as d
        inner join dbo.Company as c on c.Id = d.Company
        inner join dbo.City as ct on ct.Id = d.ActualCity
        inner join dbo.DeveloperDBMS as ddb on ddb.Developer = d.Id
        inner join dbo.DeveloperLanguage as dl on dl.Developer = d.Id and dl.[Language] = 'T-SQL'
        inner join dbo.DBMS as db on db.Id = ddb.DBMS
        left join dbo.DeveloperDBMSTag as ddbt on ddbt.DeveloperDBMS = ddb.Id and ddbt.Tag = 'AlwaysOn'
        left join dbo.DeveloperLanguageTag as dlt on dlt.DeveloperLanguage = dl.Id and dlt.IsWriter = 1 and dlt.Tag = 'MOT'
        where 
            ct.Name = 'Kazan' and c.Name != 'Maxima' and 
            db.Name = 'MS SQL Server' and ddb.[Version] in (2008, 2012, 2014, 2016) and
            (select count(*) from dbo.DeveloperDBMSTag as ddbt where ddbt.DeveloperDBMS = ddb.Id and ddbt.Tag in ('OLTP', 'lock', 'transaction', 'optimization', 'admin')) >= 4 and
            (
                select count(*)
                    from dbo.DeveloperLanguageTag as dlt
                    where dlt.DeveloperLanguage = dl.Id and dlt.IsWriter = 1 and dlt.Tag in ('index', 'procedure', 'function', 'trigger', 'view')
            ) > 3 and
            d.ExperienceInYears >= 2
);
GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
